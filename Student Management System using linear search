/* Online C Compiler and Editor */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_STUDENTS 100

// Structure to hold student information
struct Student {
    int rollNumber;
    char name[50];
    float marks;
};

// Function to add a student
void addStudent(struct Student students[], int *numStudents) {
    if (*numStudents >= MAX_STUDENTS) {
        printf("Cannot add more students. Maximum limit reached.\n");
        return;
    }

    printf("Enter roll number: ");
    scanf("%d", &students[*numStudents].rollNumber);

    printf("Enter name: ");
    scanf("%s", students[*numStudents].name);

    printf("Enter marks: ");
    scanf("%f", &students[*numStudents].marks);

    (*numStudents)++;
    printf("Student added successfully.\n");
}

// Function to display all students
void displayStudents(struct Student students[], int numStudents) {
    if (numStudents == 0) {
        printf("No students to display.\n");
        return;
    }

    printf("Roll Number\tName\tMarks\n");
    for (int i = 0; i < numStudents; i++) {
        printf("%d\t\t%s\t%.2f\n", students[i].rollNumber, students[i].name, students[i].marks);
    }
}

// Function to search for a student by roll number using linear search
int searchStudent(struct Student students[], int numStudents, int rollNumber) {
    for (int i = 0; i < numStudents; i++) {
        if (students[i].rollNumber == rollNumber) {
            return i; // Student found at index i
        }
    }
    return -1; // Student not found
}

int main() {
    struct Student students[MAX_STUDENTS];
    int numStudents = 0;
    int choice;
    int rollNumber;

    do {
        printf("\nStudent Management System\n");
        printf("1. Add Student\n");
        printf("2. Display Students\n");
        printf("3. Search Student by Roll Number\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                addStudent(students, &numStudents);
                break;
            case 2:
                displayStudents(students, numStudents);
                break;
            case 3:
                printf("Enter roll number to search: ");
                scanf("%d", &rollNumber);
                int index = searchStudent(students, numStudents, rollNumber);
                if (index != -1) {
                    printf("Student found at index %d\n", index);
                    printf("Roll Number\tName\tMarks\n");
                    printf("%d\t\t%s\t%.2f\n", students[index].rollNumber, students[index].name, students[index].marks);
                } else {
                    printf("Student with roll number %d not found.\n", rollNumber);
                }
                break;
            case 4:
                printf("Exiting...\n");
                break;
            default:
                printf("Invalid choice. Please enter again.\n");
        }
    } while (choice != 4);

    return 0;
}

